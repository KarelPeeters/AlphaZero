[package]
name = "alpha-zero"
description = "Implementation of AlphaZero, including selfplay game generation"
version = "0.2.0"
edition = "2018"

[features]
default = ["cuda"]
cuda = ["cuda-nn-eval"]

[dependencies]

# core crates
board-game = { version = "0.3.6", path = "../../../board-game-rs" }
nn-graph = { path = "../nn-graph" }
cuda-nn-eval = { path = "../cuda-nn-eval", optional = true }

# games
chess = "3.2.0"
pgn-lexer = "0.2.0-alpha"
vampirc-uci = { version = "0.11.0", features = ["chess"] }

# data processing
onnxruntime = { version = "0.0.14", optional = true }
ndarray = "0.15.1"

# concurrency
crossbeam = "0.8.1"
rayon = "1.5.1"

# util
itertools = "0.10.1"
internal-iterator = "0.1.2"

rand = "0.8.4"
rand_distr = "0.4.1"

unwrap-match = "0.1.0"
decorum = { version = "0.3.1", default-features = false, features = ["std"] }
self_cell = "0.10.0"

# io
serde = { version = "1.0.126", features = ["derive"] }
serde_json = "1.0.64"
clap = "3.0.0-beta.5"
safe-transmute = "0.11.2"
image = { version = "0.23.14", default-features = false, features = ["png"] }
memmap = "0.7.0"

tar = "0.4.37"
bzip2 = "0.4.3"

# other