use board_game::board::Board;
use board_game::games::chess::{chess_game_to_pgn, ChessBoard};
use kz_core::mapping::chess::ChessStdMapper;
use kz_core::mapping::PolicyMapper;

const MOVES: &[usize] = &[
    223, 295, 246, 223, 269, 1479, 339, 1568, 177, 179, 200, 202, 406, 573, 1477, 1478, 456, 789, 51, 49, 73, 674, 388,
    1459, 1503, 1522, 1131, 0, 191, 842, 44, 1588, 7, 1683, 1458, 70, 115, 269, 89, 112, 1533, 89, 70, 1558, 315, 216,
    106, 193, 1500, 41, 212, 106, 170, 277, 210, 133, 1323, 929, 29, 216, 1308, 337, 205, 752, 1448, 270, 841, 288,
    1605, 1593, 914, 1557, 1083, 268, 1250, 420, 440, 202, 627, 224, 1115, 566, 608, 630, 134, 1354, 292, 630, 312,
    1371, 203, 420, 621, 1448, 291, 1287, 782, 216, 1271, 1448, 735, 193, 505, 1273, 447, 656, 291, 1273, 445, 406,
    571, 224, 743, 422, 929, 644, 481, 596, 760, 455, 435, 790, 245, 260, 407, 114, 699, 526, 676, 312, 623, 288, 1502,
    246, 838, 259, 816, 93, 1477, 289, 1506, 312, 893, 292, 860, 472, 998, 314, 721, 482, 1083, 690, 1832, 518, 1422,
    337, 893, 518, 698, 328, 783, 155, 759, 328, 858, 155, 783, 328, 650, 155, 757, 328, 597, 155, 807, 328, 640, 155,
    858, 328, 638, 155, 470, 328, 259, 155, 433, 328, 1610, 155, 767, 328, 986, 155, 1301, 328, 1139, 155, 92, 328,
    915, 155, 1645, 328, 929, 155, 1078, 327, 769, 133, 268, 288, 999, 265, 1181, 292, 1105, 472, 1813, 306, 822, 154,
    1363, 314, 432, 482, 686, 688, 271, 482, 1191, 688, 1215, 482, 597, 699, 1232, 883, 1062, 699, 1402, 883, 1049,
    699, 872, 893, 818, 1082, 1229, 1241, 639, 1389, 866, 1362, 1136, 1163, 893, 974, 1611, 790, 651, 974, 1674, 780,
    972, 596, 650, 783, 868, 757, 456, 589, 650, 563, 865, 405, 839, 563, 860, 400, 696, 425, 671, 400, 650, 422, 860,
    268, 698, 430, 865, 585, 842, 382, 1009, 565, 1191, 586, 1035, 406, 1209, 586, 1025, 400, 859, 422, 675, 258, 858,
    70, 650, 216, 868, 189, 1025, 8, 859, 192, 675, 178,
];

fn main() {
    let mapper = ChessStdMapper;
    let start = ChessBoard::default();

    let mut board = start.clone();
    let mut moves = vec![];

    for &mv in MOVES {
        let mv = mapper.index_to_move(&board, mv).unwrap();
        moves.push(mv);
        println!("{}", mv);

        board.play(mv).unwrap();
        println!("{:?}", board.outcome());
    }

    println!("{}", chess_game_to_pgn("kZero", "kZero", &start, &moves));
}
